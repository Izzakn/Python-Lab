# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nO0qoHw_4PZOvYC2qEa4ahjdfpZirgzO
"""



"""Lab Task 1"""

list1 = [int(x) for x in input("Enter values for the first list separated by spaces: ").split()]
list2 = [int(x) for x in input("Enter values for the second list separated by spaces: ").split()]

merged_list = sorted(list1 + list2)
print("Merged and sorted list:", merged_list)

"""Lab Task 2"""

list1 = eval(input("Enter the first list: "))
list2 = eval(input("Enter the second list: "))

merged_list = list1 + list2

smallest = merged_list[0]
largest = merged_list[0]

for num in merged_list:
    if num < smallest:
        smallest = num
    if num > largest:
        largest = num

"""Lab Task 3"""

from math import sin, cos, pi
import numpy as np
import matplotlib.pyplot as plt

def approximate_derivative(h):

    x_values = np.arange(-pi, pi, h)


    approx_derivatives = [(sin(x + h) - sin(x)) / h for x in x_values]


    exact_derivatives = [cos(x) for x in x_values]


    print(f"\nResults for h = {h}:")
    print(f"{'x':>10} {'sin(x)':>10} {'cos(x)':>10} {'Approx':>10} {'Error':>10}")
    for x, approx, exact in zip(x_values, approx_derivatives, exact_derivatives):
        print(f"{x:10.4f} {sin(x):10.4f} {exact:10.4f} {approx:10.4f} {abs(approx - exact):10.4f}")

    return x_values, approx_derivatives, exact_derivatives


def plot_results(x_values, approx_derivatives, exact_derivatives, h):
    plt.plot(x_values, approx_derivatives, label=f'Approx Derivative (h={h})', linestyle='--')
    plt.plot(x_values, exact_derivatives, label='Exact Derivative (cos(x))', linestyle='-')
    plt.title(f'Comparison of Derivatives for h={h}')
    plt.xlabel('x')
    plt.ylabel('Derivative')
    plt.legend()
    plt.grid(True)
    plt.show()

for h in [0.001, 0.01, 0.1]:
    x_values, approx_derivatives, exact_derivatives = approximate_derivative(h)
    plot_results(x_values, approx_derivatives, exact_derivatives, h)

"""Lab Task 4"""

birthdays = {
    "Albert Einstein": "03/14/1879",
    "Benjamin Franklin": "01/17/1706",
    "Ada Lovelace": "12/10/1815"
}

print("Welcome to the birthday dictionary. We know the birthdays of:")
for name in birthdays:
    print(name)

name = input("Who's birthday do you want to look up? ")

if name in birthdays:
    print(f"{name}'s birthday is {birthdays[name]}.")
else:
    print("Sorry, we don't have birthday information for that person.")

"""Lab Task 5"""

sample_dict = {
    "name": "Kelly",
    "age": 25,
    "salary": 8000,
    "city": "New york"
}

# Keys to extract
keys = ["name", "salary"]

# Extracting keys manually
new_dict = {}
for key in keys:
    if key in sample_dict:
        new_dict[key] = sample_dict[key]

print(new_dict)